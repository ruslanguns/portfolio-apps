name: Countdown Event Timer App test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "1-CountDown-Timer/app/**"
      - "!1-CountDown-Timer/app/**.md"
      - "!1-CountDown-Timer/app/.gitignore"
      - "!1-CountDown-Timer/app/.eslintrc.json"
      - "!1-CountDown-Timer/app/.prettierrc.json"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
  
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 3

    env:
      WORKDIR: 1-CountDown-Timer/app

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.4
          run_install: true

      - name: Use stable version of Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
          cache-dependency-path: ${{ env.WORKDIR }}/pnpm-lock.yaml

      - name: Run lint
        working-directory: ${{ env.WORKDIR }}
        run: pnpm lint


  e2e-cypress:
    name: Test UI with E2E Cypress
    runs-on: ubuntu-latest

    env:
      WORKDIR: 1-CountDown-Timer/app
    
    strategy:
      matrix:
        node-version: [16.x]

    needs: install-and-build
    timeout-minutes: 3
    if: github.event.pull_request.draft != true

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.4
          run_install: true

      - name: Use stable version of Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
          cache-dependency-path: ${{ env.WORKDIR }}/pnpm-lock.yaml
      
      - name: Testing app with Chrome
        uses: cypress-io/github-action@v2
        with:
          working-directory: ${{ env.WORKDIR }}
          browser: chrome
          install: false
          build: pnpm build
          start: pnpm start
          headless: true
        env:
          #CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          #CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  install-and-build:
    name: Build app
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft != true

    env:
      WORKDIR: 1-CountDown-Timer/app

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.4
          run_install: true

      - name: Use stable version of Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
          cache-dependency-path: ${{ env.WORKDIR }}/pnpm-lock.yaml
      
      - name: Install dependencies
        working-directory: ${{ env.WORKDIR }}
        run: pnpm i

      - name: Build application
        working-directory: ${{ env.WORKDIR }}
        run: pnpm build
