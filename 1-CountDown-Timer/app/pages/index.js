import Head from 'next/head'
import Collapsable from '../components/Collapsable'
import EventCard from '../components/EventCard'
import FilteredEvent from '../components/FilteredEvent'
import Heading from '../components/Heading'
import styles from '../styles/Home.module.css'
import FloatingButton from '../components/FloatingButton'
import AddIcon from '../components/icons/AddIcon'
import { GlobalStoreContext } from '../shared/contexts/globalStore'
import { useContext, useEffect, useState } from 'react'

export default function Home() {
  const [eventos, setEventos] = useState([])
  const { state } = useContext(GlobalStoreContext)

  useEffect(() => {
    setEventos(state.eventos)
  }, [state.eventos])

  return (
    <div className={styles.container}>
      <Head>
        <title>Upcoming events</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main className={styles.main}>
        <Heading className={styles.title} title="Upcomming events!" />

        {eventos.length > 0 && (
          <>
            <aside className={styles.sidebar}>
              <Collapsable label="Featured events">
                {eventos.map((item, idx) => (
                  <FilteredEvent key={idx} label={item.name} date={item.date} />
                ))}
              </Collapsable>

              <Collapsable label="Last events added">
                {eventos.map((item, idx) => (
                  <FilteredEvent key={idx} label={item.name} date={item.date} />
                ))}
              </Collapsable>
            </aside>

            <div className={styles.events}>
              {eventos
                .sort((a, b) => a.date - b.date)
                .map(({ date, name }, index) => (
                  <EventCard key={index} date={date} name={name} />
                ))}
            </div>
          </>
        )}
      </main>
      <FloatingButton
        options={[
          {
            icon: AddIcon,
            href: '/add',
          },
        ]}
      />
    </div>
  )
}

// export async function getServerSideProps() {
//   // Fetch data from external API
//   const res = await fetch(`http://localhost:3000/api`)
//   const { data } = await res.json()

//   console.log(data)

//   return { props: { _eventos: data } }
// }
